# встановлюємо необхідні пакети
sudo apt-get install asciinema
sudo apt-get install bridge-utils

# починаємо запис сеансу
asciinema rec -t "demo-hw"

mkdir demo
cd demo
mkdir rootfs

# завантажуємо та запускаємо контейнер busybox
docker run --name busybox busybox

# копіюємо вміст контейнера busybox до нашого каталогу rootfs
docker export busybox | tar -xf - -C rootfs/

runc spec
nano config.json
# міняємо або додаємо до config.json наступні рядки

    "terminal": false,

    "sh", "-c", "while true; do { echo -e 'HTTP/1.1 200 OK\n\n Version: 1.0.0'; } | nc -vlp 8080; done"

    "type": "network",
    "path": "/var/run/netns/runc"

# створюємо мережевий простір і віртуальний міст
sudo bash
brctl addbr runc0
ip link set runc0 up
ip addr add 192.168.0.1/24 dev runc0
ip a show runc0
ip link add name veth-host type veth peer name veth-guest
ip a show veth-host
ip link set veth-host up
brctl show runc0
brctl addif runc0 veth-host
brctl show runc0
ip netns add runc
ip netns ls

# налаштовуємо мережевий простір для runc
ip link set veth-guest netns runc
ip netns exec runc ip link set veth-guest name eth1
ip netns exec runc ip addr add 192.168.0.2/24 dev eth1
ip netns exec runc ip link set eth1 up
ip netns exec runc ip route add default via 192.168.0.1

# запускаємо контейнер за допомогою runc
sudo runc run demo

# бачимо відповідь, що контейнер запущено і він слухає на порту 8080
listening on [::]:8080 ...

# відкриваємо новий термінал і перевіряємо чи працює наш контейнер
curl 192.168.0.2:8080
# бачимо відповідь
Version: 1.0.0

sudo runc kill demo KILL

# повертаємося до першого терміналу і бачимо:
connect to [::ffff:192.168.0.2]:8080 from (null) ([::ffff:192.168.0.1]:43756)
GET / HTTP/1.1
Host: 192.168.0.2:8080
User-Agent: curl/8.5.0
Accept: */*

listening on [::]:8080 ...

# завершуємо запис сеансу та зберігаємо його
exit
u

# результат: https://asciinema.org/a/723607